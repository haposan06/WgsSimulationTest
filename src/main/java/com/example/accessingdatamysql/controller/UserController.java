package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.service.ContentService;
import com.example.accessingdatamysql.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.accessingdatamysql.model.User;
import com.example.accessingdatamysql.repository.UserRepository;

import java.util.List;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserService userService;

	@Autowired
	private ContentService contentService;

	@PostMapping(path="/register") // Map ONLY POST Requests
	public @ResponseBody String register (@RequestParam String name,
											@RequestParam String username,
											@RequestParam String email,
											@RequestParam String password) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User user = new User();
		user.setName(name);
		user.setUsername(username);
		user.setEmail(email);
		user.setPassword(password);
		userService.saveOrUpdate(user);
		return "Saved";
	}

	@PostMapping(path="/login")
	public @ResponseBody String login (@RequestParam String email,
									   @RequestParam String password) {
		User user = userService.login(email, password);
		if (user != null){
			return "Logged";
		}
		return "Not Found";
	}
}
